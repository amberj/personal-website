{
    "version": "https://jsonfeed.org/version/1",
    "title": "Amber&#x27;s Journal",
    "description": "",
    "home_page_url": "https://amberja.in",
    "feed_url": "https://amberja.in/feed.json",
    "user_comment": "",
    "author": {
        "name": "Written by Amber Jain"
    },
    "items": [
        {
            "id": "https://amberja.in/setting-up-google-tv-os-on-a-new-tv.html",
            "url": "https://amberja.in/setting-up-google-tv-os-on-a-new-tv.html",
            "title": "Setting up Google TV OS on a new TV",
            "summary": "Apps to install If you live in India, you will want to&hellip;",
            "content_html": "<div class=\"post__toc\">\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#mcetoc_1j2ppipe92\">Apps to install</a></li>\n<li><a href=\"#mcetoc_1j2ppqegkt\">Performance optimization</a></li>\n</ul>\n</div>\n<h2 id=\"mcetoc_1j2ppipe92\">Apps to install</h2>\n<p>If you live in India, you will want to install these apps:</p>\n<ol>\n<li>Netflix</li>\n<li>Prime Video</li>\n<li>Apple TV</li>\n<li>JioHotstar</li>\n<li>Youtube</li>\n<li>Youtube Music</li>\n<li>SonyLIV</li>\n<li>Zee5</li>\n</ol>\n<p>Other apps:</p>\n<ol>\n<li>Mubi</li>\n</ol>\n<h2 id=\"mcetoc_1j2ppqegkt\">Performance optimization</h2>\n<ol>\n<li>In Android settings, find build number, and press OK on your remote few times to enable Developer Options</li>\n<li>Open Developer Options\n<ol>\n<li>Set Window animation Scale to 0.5x</li>\n<li>Set Transition animation scale to 0.5x</li>\n<li>Set Animator duration scale to 0.5x</li>\n</ol>\n</li>\n<li>Enable \"Don't keep activities\"</li>\n<li>Set \"Background process limit\" to \"No background processes\" (or \"At most 1 process\" if you face any issues).</li>\n</ol>",
            "image": "https://amberja.in/media/posts/28/google-tv-home-screen.webp",
            "author": {
                "name": "Written by Amber Jain"
            },
            "tags": [
                   "Blogposts"
            ],
            "date_published": "2025-08-16T21:31:26+05:30",
            "date_modified": "2025-08-17T01:02:27+05:30"
        },
        {
            "id": "https://amberja.in/using-leftoverspare-quota-of-gemini-cli-or-claude-codes-cli-to-automate-daily-tasks.html",
            "url": "https://amberja.in/using-leftoverspare-quota-of-gemini-cli-or-claude-codes-cli-to-automate-daily-tasks.html",
            "title": "Using leftover/spare quota of Gemini CLI or Claude Code&#x27;s CLI to automate daily tasks",
            "summary": "Many developers and power users have leftover quota from their Claude Pro&hellip;",
            "content_html": "<div>\n<div class=\"post__toc\">\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#mcetoc_1j0un49t05\">TL;DR</a></li>\n<li><a href=\"#mcetoc_1j0unc78k74\">Detailed description of the flow:</a>\n<ul>\n<li><a href=\"#mcetoc_1j0unc78k75\">The Opportunity</a></li>\n<li><a href=\"#mcetoc_1j0unc78k76\">Checking Your Available Quota</a>\n<ul>\n<li><a href=\"#mcetoc_1j0unc78k77\">For Claude Code:</a></li>\n<li><a href=\"#mcetoc_1j0unc78k78\">For Gemini CLI:</a></li>\n</ul>\n</li>\n<li><a href=\"#mcetoc_1j0unc78k79\">Building Your Automation Pipeline</a>\n<ul>\n<li><a href=\"#mcetoc_1j0unc78k7a\">Core Architecture</a></li>\n<li><a href=\"#mcetoc_1j0unc78k7b\">Scheduling with Cron</a></li>\n<li><a href=\"#mcetoc_1j0unc78k7c\">Enhanced Capabilities with MCP Servers</a></li>\n<li><a href=\"#mcetoc_1j0unc78k7d\">Cross-Platform Configuration</a></li>\n<li><a href=\"#mcetoc_1j0unfnv487\">Practical Implementation</a></li>\n<li><a href=\"#mcetoc_1j0unc78k7f\">Advanced Techniques</a></li>\n</ul>\n</li>\n<li><a href=\"#mcetoc_1j0unfnv488\">Getting Started</a></li>\n<li><a href=\"#mcetoc_1j0unc78k7h\">Conclusion</a></li>\n</ul>\n</li>\n</ul>\n</div>\n</div>\n<div> </div>\n<div>Many developers and power users have leftover quota from their Claude Pro subscription or free tier access to Gemini CLI. Instead of letting this computational power go to waste, you can harness it to automate routine tasks and create intelligent workflows that run seamlessly across all your devices.</div>\n<div> </div>\n<div>This is product spec for the same. I wrote it as a starting point for Claude Code.</div>\n<h2 id=\"mcetoc_1j0un49t05\">TL;DR</h2>\n<ul>\n<li>Use Claude Code (with Claude Pro plan, to utilize it's leftover quota in every block of 5 hours) or Gemini CLI (which is free as of July 2025).</li>\n<li>Build a script, so that it can be used on on Mac, Windows and Linux. This will also allow it's usage on Android via <a href=\"https://amberja.in/installing-termux.html\" target=\"_blank\" rel=\"noopener noreferrer\">Termux</a> to run this system on old/spare Android smartphne for virtually no extra cost.</li>\n<li>Use Cron for timely execution.</li>\n<li>Check leftover/spare quota using:\n<ul>\n<li>For Claude Code with Claude Pro plan: Use something like this: `ccusage blocks --since 20250722 --until 20250722 --json`</li>\n<li>For Gemini CLI: As of July 2025, it's free. I am guessing that Google has enough cash surplus to keep it free long enough either until their models are market leaders (or until they take a significant market share from their competitors).</li>\n</ul>\n</li>\n<li>Maybe use thinking model, sequential thinking or deep research mode to come up with topics. Or maybe, upload a book as pdf or markdown.</li>\n<li>Agent mode (i.e. run multiple prompts in a pipeline).</li>\n<li>Use Python or bash to create a pipeline.</li>\n<li>Send all relevant output to a slack channel, to be reviewed later.</li>\n<li>Use relevant MCP servers (if you intend to run this on a spare Android device, make sure to use MCP servers that work correctly on Android).\n<ul>\n<li>Zen MCP with Openrouter to use different models for different tasks that the models excel at.</li>\n<li>Markdown mcp to convert books (maybe ask ai to parse both pdf and markdown of same chapter to make sure everything is understood correctly)</li>\n<li>Sequential thinking / Deep Research</li>\n<li>Filesystem MCP to store generated files</li>\n<li>Send native mac notification when a long running prompt is finished https://github.com/devizor/macOS-Notification-MCP</li>\n</ul>\n</li>\n<li>Generate output in markdown for easy consumption by next step of agent as well as human reading.</li>\n<li>Allow globally recognized configurations such as `.env` or `settings.json`.</li>\n</ul>\n<h2 id=\"mcetoc_1j0unc78k74\">Detailed description of the flow:</h2>\n<h3 id=\"mcetoc_1j0unc78k75\">The Opportunity</h3>\n<div> </div>\n<div>Claude Code comes bundled with Claude Pro plans and provides generous quota that resets every 5 hours. Meanwhile, Gemini CLI remains completely free as of July 2025. Both tools offer powerful automation capabilities that most users barely scratch the surface of.</div>\n<div> </div>\n<div>One key insight is building cross-platform scripts that work identically on Mac, Windows, Linux, and even Android via Termux. This approach lets you repurpose old Android devices as dedicated automation servers at virtually no additional cost.</div>\n<h3 id=\"mcetoc_1j0unc78k76\">Checking Your Available Quota</h3>\n<div>Before diving into automation, establish quota monitoring:</div>\n<h4 id=\"mcetoc_1j0unc78k77\">For Claude Code:</h4>\n<div>Use something similar like this:</div>\n<div>`ccusage blocks --since 20250722 --until 20250722 --json`</div>\n<h4 id=\"mcetoc_1j0unc78k78\">For Gemini CLI:</h4>\n<div>Currently free with no quota restrictions. Google's substantial bank balance suggest this will remain viable for the foreseeable future, at least until they capture significant market share, or they launch models which become clear industry leaders in multi-modality usecases.</div>\n<h3 id=\"mcetoc_1j0unc78k79\">Building Your Automation Pipeline</h3>\n<h4 id=\"mcetoc_1j0unc78k7a\">Core Architecture</h4>\n<div>Create a Python or bash pipeline that chains multiple AI prompts together in agent mode. Each step feeds its output to the next, creating sophisticated workflows that rival expensive enterprise solutions.</div>\n<h4 id=\"mcetoc_1j0unc78k7b\">Scheduling with Cron</h4>\n<div>Set up regular execution using cron jobs. This ensures your automation runs consistently without manual intervention, whether you're checking market trends, summarizing news, or processing documents.</div>\n<h4 id=\"mcetoc_1j0unc78k7c\">Enhanced Capabilities with MCP Servers</h4>\n<div>Model Context Protocol servers dramatically expand what's possible:</div>\n<ul>\n<li>Zen MCP with OpenRouter: Route different tasks to models that excel at specific functions</li>\n<li>Markdown MCP: Convert and process books, ensuring accuracy by cross-referencing PDF and markdown versions</li>\n<li>Sequential Thinking/Deep Research: Engage advanced reasoning modes for complex analysis</li>\n<li>Filesystem MCP: Organize and store generated content systematically</li>\n<li>macOS Notification MCP: Get alerts when long-running processes complete</li>\n</ul>\n<h4 id=\"mcetoc_1j0unc78k7d\">Cross-Platform Configuration</h4>\n<div>Use standard configuration patterns like .env files or settings.json to maintain consistency across devices. This ensures that if a user has configured settings like OPENROUTER_KEY in one of the globally de facto configuration files (for some other program), then our program will automatically pick the relevant settings.</div>\n<h4 id=\"mcetoc_1j0unfnv487\">Practical Implementation</h4>\n<div>* Structure your output in markdown format for maximum compatibility. This makes content easily consumable by both subsequent AI processing steps. It also makes human review process much easier. </div>\n<div>* Route all results to a designated Slack channel for centralized monitoring and review.</div>\n<div>* For Android deployment via Termux, verify that your chosen MCP servers function correctly on Android environment. Some servers may have architecture-specific dependencies that require alternatives.</div>\n<h4 id=\"mcetoc_1j0unc78k7f\">Advanced Techniques</h4>\n<div>* Consider uploading entire books as PDFs or markdown files to generate comprehensive analysis and insights. Or, use sequential thinking, 'thinking' LLM models or deep research modes to explore complex topics that would be time-consuming to research manually.</div>\n<div>* The agent mode approach allows for sophisticated multi-step reasoning where each phase builds upon previous results, creating outputs that far exceed what single prompts could achieve.</div>\n<h3 id=\"mcetoc_1j0unfnv488\">Getting Started</h3>\n<div>Begin with simple tasks like daily news summarization or weather reporting. Once your pipeline proves reliable, expand into more complex workflows like market analysis, document processing, or research synthesis.</div>\n<h3 id=\"mcetoc_1j0unc78k7h\">Conclusion</h3>\n<div>The combination of free/leftover quota, cross-platform compatibility, and MCP server integration creates surprisingly powerful automation capabilities. What starts as a way to utilize spare resources often evolves into an indispensable part of daily workflows.</div>",
            "image": "https://amberja.in/media/posts/26/llm-mcp-on-android.png",
            "author": {
                "name": "Written by Amber Jain"
            },
            "tags": [
                   "Half Baked Explorations",
                   "AI / LLMs"
            ],
            "date_published": "2025-07-24T22:47:26+05:30",
            "date_modified": "2025-07-24T22:57:28+05:30"
        },
        {
            "id": "https://amberja.in/scripting-claude-code-for-headless-and-unattended-tasks.html",
            "url": "https://amberja.in/scripting-claude-code-for-headless-and-unattended-tasks.html",
            "title": "Scripting Claude Code for headless &amp; unattended tasks",
            "summary": "Claude code’s today (2025-07-22 in this case) usage as json for each&hellip;",
            "content_html": "<p>Claude code’s <code>today</code> (2025-07-22 in this case) usage as <code>json</code> for each 5 hour <code>blocks</code> of time:</p><p><code>ccusage blocks --since 20250722 --until 20250722 --json</code></p><p>Personal use case: \nClaude pro’s paid quota gets wasted during: </p><ul>\n<li>holidays</li>\n<li>night when user is sleeping</li>\n<li>or even during the day on wekdays when we sometimes don’t use it much.</li>\n</ul>\n<p>It’s quota is reset every 5 hours <a href=\"https://support.anthropic.com/en/articles/8325612-does-claude-pro-have-any-usage-limits\">https://support.anthropic.com/en/articles/8325612-does-claude-pro-have-any-usage-limits</a></p><p>Trying to write a python/bash script that could parse this json, see if quota is unused 30-60minutes before 5 hr block gets expired…. and utilize it to run some background tasks via claude cli + MCP’s (e.g. generate text posts for social media OR analyze codebase passively in background to reveal bugs).</p>",
            "image": "https://amberja.in/media/posts/15/4dface4fdc350ad704f19a8f8704cf3264c55682-2880x1620.webp",
            "author": {
                "name": "Written by Amber Jain"
            },
            "tags": [
                   "Half Baked Explorations",
                   "AI / LLMs"
            ],
            "date_published": "2025-07-22T20:47:17+05:30",
            "date_modified": "2025-07-23T16:51:08+05:30"
        },
        {
            "id": "https://amberja.in/send-slack-message-via-api-using-xoxp-user-token.html",
            "url": "https://amberja.in/send-slack-message-via-api-using-xoxp-user-token.html",
            "title": "Send slack message via api using &#x60;xoxp&#x60; User token ",
            "summary": "Create an app here: https://api.slack.com/apps You can see newly created Slack app&hellip;",
            "content_html": "<ul>\n<li>Create an app here: <a href=\"https://api.slack.com/apps\">https://api.slack.com/apps</a><ul>\n<li>You can see newly created Slack app here: <a href=\"https://api.slack.com/apps/\">https://api.slack.com/apps/</a></li>\n<li>On App screen, click <strong>OAuth &amp; Permissions</strong> in the sidebar.<ul>\n<li>Under <strong>User Token Scopes</strong> section, click <strong>Add an OAuth Scope</strong></li>\n<li>Under <strong>OAuth Tokens</strong> , click <strong>Install to Productiwitty</strong>. This will generate <strong>User OAuth Token</strong> starting with <code>xoxp</code>.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Now install <code>slack_sdk</code> inside virtualenv using:</p><p><code>pip install slack_sdk</code></p><p>Then you can send messages via Slack API using following Python 3 code:</p><pre><code>#!/usr/bin/env python3\nimport datetime\nfrom slack_sdk import WebClient\n\n# ID of channel you want to post message to\n#\nchannel_id = &quot;CXXXXXXX&quot;\n\nuser_token = &quot;xoxp-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&quot;\n\nclient = WebClient(user_token)\n\ndef send_slack_message(channel_id, msg):\n    try:\n        result = client.chat_postMessage(\n            channel=channel_id,\n            text=msg\n        )\n        print(result)\n\n    except SlackApiError as e:\n        print(f&quot;Error: {e}&quot;)\n\nsend_slack_message(channel_id, &quot;hello&quot;)\n</code></pre>\n<p>You can also schedule a message using this code:</p><pre><code>def schedule_msg(channel_id, at_hour, at_minute, msg, day):\n    scheduled_time = datetime.time(hour=at_hour, minute=at_minute)\n    schedule_timestamp = datetime.datetime.combine(day, scheduled_time).strftime(&#39;%s&#39;)\n    try:\n        result = client.chat_scheduleMessage(\n            channel=channel_id,\n            text=msg,\n            post_at=schedule_timestamp\n        )\n        print(result)\n    except Exception as e:\n        print(f&quot;EXCEPTION!!! {e}&quot;)\n\ntoday = datetime.date.today()\n\n# Schedule a message to be sent at 23:35 (11:35pm) today:\nschedule_msg(channel_id, 23, 35, &quot;bye&quot;, today)\n</code></pre>\n",
            "image": "https://amberja.in/media/posts/13/slack-large.webp",
            "author": {
                "name": "Written by Amber Jain"
            },
            "tags": [
                   "Programming",
                   "Blogposts"
            ],
            "date_published": "2025-07-17T00:27:09+05:30",
            "date_modified": "2025-07-23T16:51:25+05:30"
        },
        {
            "id": "https://amberja.in/installing-termux.html",
            "url": "https://amberja.in/installing-termux.html",
            "title": "Installing &amp; setting up Termux on Android",
            "summary": "Install Termux from F-droid or official website. Play Store version is outdated.",
            "content_html": "<p>Install Termux from F-droid or official website. Play Store version is outdated.</p><h2 id=\"change--update-repo-sources\">Change &amp; update repo sources</h2>\n<p><code>termux-change-repo</code></p><p><code>pkg update &amp;&amp; pkg upgrade</code></p><h2 id=\"install-some-utilities\">Install some utilities</h2>\n<p><code>pkg install termux-tools openssh wget python iproute2 git curl nano</code></p><h2 id=\"why-i-dont-install-termux-api-package\">Why I don’t install <code>termux-api</code> package?</h2>\n<p>Termux API was consuming a lot of battery on my Samsung Galaxy Z Fold 5, when I had installed <a href=\"https://github.com/sabamdarif/termux-desktop?tab=readme-ov-file\">full XFCE Linux desktop environment on Android device with Termux X11</a></p><p>This addon exposes Android device functionality as API to command line programs in Termux. For e.g.</p><ul>\n<li>Vibrate the device when something interesting happens.</li>\n<li>Access the system clipboard from shell scripts.</li>\n<li>Read and send sms messages from your terminal.</li>\n<li>Access device GPS location sensor from scripts.</li>\n</ul>\n<p>Complete list of API implementations are available at: <a href=\"https://wiki.termux.com/wiki/Termux:API\">https://wiki.termux.com/wiki/Termux:API</a></p><p>If you need this functionality, then only install it.</p><h2 id=\"access-termux-files-in-android\">Access termux files in Android</h2>\n<p><code>termux-setup-storage</code></p><p>Use a file manager like <a href=\"https://play.google.com/store/apps/details?id=me.zhanghai.android.files\">Material Files</a></p><h2 id=\"setup\">Setup</h2>\n<ul>\n<li>Claude Code and/or Gemini CLI</li>\n</ul>\n<p><code>pkg install nodejs-lts git</code></p><p><code>npm install -g @anthropic-ai/claude-code</code></p><p><code>npm install -g @google/gemini-cli</code></p><p><code>mkdir claude-code</code></p><p><code>cd claude-code/</code></p><p><code>claude</code></p><p><code>gemini</code></p><ul>\n<li>MCPs in Claude Code and/or Gemini CLI</li>\n</ul>\n",
            "image": "https://amberja.in/media/posts/12/1200x600wa.png",
            "author": {
                "name": "Written by Amber Jain"
            },
            "tags": [
                   "Blogposts",
                   "Android"
            ],
            "date_published": "2025-07-11T01:20:57+05:30",
            "date_modified": "2025-07-23T16:51:32+05:30"
        },
        {
            "id": "https://amberja.in/linkedin-growth.html",
            "url": "https://amberja.in/linkedin-growth.html",
            "title": "Growing your organic reach on LinkedIn",
            "summary": "Useful URLs Some of these URLs might not work on mobile browser&hellip;",
            "content_html": "<h2 id=\"useful-urls\">Useful URLs</h2>\n<p>Some of these URLs might not work on mobile browser (unless you request “Desktop site” in Chrome), but all of these should work on Desktop browsers:</p><ul>\n<li><p>The default linked feed shows so much irrelevant content:</p><ul>\n<li>Linkedin Ads</li>\n<li>Posts from  &gt;= 2nd degree connections</li>\n<li>Shows posts from strangers, that are commented on or liked by your first degree connections.</li>\n</ul>\n<p>If this is too noisy for you and if you want to only see posts from 1st degree connections, use this url instead:</p><ul>\n<li><a href=\"https://www.linkedin.com/search/results/content/?datePosted=%22past-week%22&keywords=posts&origin=FACETED_SEARCH&postedBy=%5B%22first%22%2C%22following%22%5D&sid=wFE&sortBy=%22date_posted%22\">Show only “Posts”, sorted by “Latest”, from “Past week” and Posted by either 1st degree connections or people I follow</a></li>\n</ul>\n</li>\n<li><p>Recently Added Connections: <a href=\"https://www.linkedin.com/mynetwork/invite-connect/connections/\">https://www.linkedin.com/mynetwork/invite-connect/connections/</a></p></li>\n<li><p>Sent (but not accepted??) connection requests: <a href=\"https://www.linkedin.com/mynetwork/invitation-manager/sent/\">https://www.linkedin.com/mynetwork/invitation-manager/sent/</a></p></li>\n<li><p>Linkedin automatically follows when you send a connection request. List of people you follow but they have not accepted your connection request: <a href=\"https://www.linkedin.com/mynetwork/network-manager/people-follow/following/\">https://www.linkedin.com/mynetwork/network-manager/people-follow/following/</a></p></li>\n<li><p>Show list of connections with recent Job Changes: <a href=\"https://www.linkedin.com/mynetwork/catch-up/job_changes/\">https://www.linkedin.com/mynetwork/catch-up/job_changes/</a></p></li>\n<li><p>Show list of connections with recent birthdays: <a href=\"https://www.linkedin.com/mynetwork/catch-up/birthday/\">https://www.linkedin.com/mynetwork/catch-up/birthday/</a></p></li>\n<li><p>Show list of connections with recent Work anniversaries: <a href=\"https://www.linkedin.com/mynetwork/catch-up/work_anniversaries/\">https://www.linkedin.com/mynetwork/catch-up/work_anniversaries/</a></p></li>\n<li><p>Show list of connections with recent achievements in Education: <a href=\"https://www.linkedin.com/mynetwork/catch-up/education/\">https://www.linkedin.com/mynetwork/catch-up/education/</a></p></li>\n</ul>\n<h2 id=\"tools\">Tools</h2>\n<h3 id=\"chrome-extension---follower-insights-for-linkedin\">Chrome extension - Follower Insights for LinkedIn</h3>\n<p>Show the number of followers of a LinkedIn profile on a bunch of linkedin.com webpages. Chrome extension - <a href=\"https://chromewebstore.google.com/detail/follower-insights-for-lin/kkbaccngljoklnejedmjicfdfkhgblnd\">Follower Insights for LinkedIn\n</a></p><h3 id=\"text-formatters\">Text formatters</h3>\n<ul>\n<li>For underline: <a href=\"https://typegrow.com/tools/linkedin-text-formatter\">https://typegrow.com/tools/linkedin-text-formatter</a></li>\n<li>Use any text formatter website (e.g. <a href=\"https://www.linkedin-makeover.com/linkedin-text-formatter/#textformatter\">Linkedin Text Formatter</a>)  to format your key content (such as title) in bold etc.</li>\n<li>Use professional smileys in your posts: <a href=\"https://www.linkedin.com/pulse/emojis-linkedin-full-list-including-special-george-oliveira/\">Emojis for LinkedIn - Full list</a><ul>\n<li>Hold down alt+8 (option+8 on mac) to enter an asterisk symbol like this: •</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"tips\">Tips</h2>\n<ul>\n<li>Linkedin has a built-in scheduler (both on website and mobile apps). Use it.</li>\n<li>Schedule at least 3-4 posts every week.</li>\n<li>You can send connection request to 5-8 relevant people daily, to grow your network.</li>\n<li>Remove <em><strong>Cr</strong></em> tag on ai generated image by opening it in linkedin image editor and saving it. Even if this changes in future, you could make a minor edit in editor and then Linkedin wouldn’t identify it as an AI generated image.</li>\n<li>Ask your friends, family and acquaintances to like your posts within first 12-24 hours (whether posted from personal profile or company page). This leads to higher engagement on your post.</li>\n</ul>\n<h2 id=\"generate-bannersimages-using-generative-ai\">Generate banners/images using Generative AI</h2>\n<p>How to generate decent banner images (usually in a single attempt) using ChatGPT’s “Create image” for text content.</p><p>The following prompt does NOT gives good output:</p><blockquote>\n<p>Make a banner image for this linkedin post:𝑻𝒉𝒆 4-𝑺𝒕𝒆𝒑 𝑨𝑺𝑶 𝑳𝒐𝒐𝒑 𝑼𝒔𝒆𝒅 𝒃𝒚 𝑨𝒑𝒑 𝑺𝒕𝒐𝒓𝒆 𝑮𝒊𝒂𝒏𝒕𝒔 💡What if I told you that most top apps don’t chase keywords—they engineer cycles to pull them in? 🤔 Ever wondered how they consistently pop up in totally different keyword clusters, week after week? 📈Here’s the secret: they use a Keyword Optimization Cycle—a 4-step loop that helps them dominate visibility systematically, not sporadically 🚀</p></blockquote>\n<p>What I’m doing instead, to get good results consistently: First use this prompt:</p><blockquote>\n<p>Give a prompt to generate banner image using microsoft designer for the following linkedin post:</p><p>𝑻𝒉𝒆 4-𝑺𝒕𝒆𝒑 𝑨𝑺𝑶 𝑳𝒐𝒐𝒑 𝑼𝒔𝒆𝒅 𝒃𝒚 𝑨𝒑𝒑 𝑺𝒕𝒐𝒓𝒆 𝑮𝒊𝒂𝒏𝒕𝒔 💡What if I told you that most top apps don’t chase keywords—they engineer cycles to pull them in? 🤔 Ever wondered how they consistently pop up in totally different keyword clusters, week after week? 📈Here’s the secret: they use a Keyword Optimization Cycle—a 4-step loop that helps them dominate visibility systematically, not sporadically 🚀</p></blockquote>\n<p>Chatgpt will give a prompt like this:</p><blockquote>\n<p>A sleek, modern tech-themed banner illustrating a 4-step optimization loop for mobile apps. Use minimalistic icons or illustrations to represent each step: tracking keywords, aligning metadata, monitoring metrics, and iterating strategies. Include subtle app store elements like charts, magnifying glass, keyword tags, or mobile screens. Use a clean, professional style with a color palette of deep blue, white, and bright accents (e.g., neon green or electric purple). Add the title “The 4-Step ASO Loop Used by App Store Giants” in bold, elegant typography. Banner should feel insightful, strategic, and growth-oriented.</p></blockquote>\n<p>Add the following 2 sub-prompts to chatgpt’s generated prompt (here as an example, orange color is brand color):</p><blockquote>\n<p>(primary color should be orange)</p></blockquote>\n<p>and</p><blockquote>\n<p>Include subtle visual cues like upward-trending graphs or analytics icons to represent analytics, growth, marketing.Use a clean, tech-inspired color palette to reflect the App Store and Play Store aesthetic. The overall tone should be trustworthy, smart, professional, data-driven, growth-focused, strategic.Add a callout badge or ribbon with some highly relevant and contextual text.</p></blockquote>\n<p>The above steps consistently give a banner image with little (if any) hallucinations as well as good quality output.</p><h2 id=\"things-i-want-to-try-out\">Things I want to try out</h2>\n<ul>\n<li>Pods<ul>\n<li><a href=\"https://lempod.com/pricing/#\">https://lempod.com/pricing/#</a></li>\n<li><a href=\"https://www.hyperclapper.com/\">https://www.hyperclapper.com/</a></li>\n</ul>\n</li>\n</ul>\n",
            "image": "https://amberja.in/media/posts/8/LinkedIn-marketing-the-complete-guide-to-boost-your-strategy-Final.svg",
            "author": {
                "name": "Written by Amber Jain"
            },
            "tags": [
                   "Growth / Marketing",
                   "Blogposts"
            ],
            "date_published": "2025-07-10T16:47:16+05:30",
            "date_modified": "2025-08-02T04:57:35+05:30"
        },
        {
            "id": "https://amberja.in/adding-mcp-servers-to-claude-code.html",
            "url": "https://amberja.in/adding-mcp-servers-to-claude-code.html",
            "title": "Adding MCP servers to Claude Code",
            "summary": "Anthropic’s Documentation: https://docs.anthropic.com/en/docs/claude-code/mcp If you have already added MCPs on Claude Desktop&hellip;",
            "content_html": "<p>Anthropic’s Documentation: <a href=\"https://docs.anthropic.com/en/docs/claude-code/mcp\">https://docs.anthropic.com/en/docs/claude-code/mcp</a></p><h2 id=\"handy-command\">Handy command:</h2>\n<p>If you have already added MCPs on Claude Desktop app, then you can use this command to import some/all of these MCPs from Claude Desktop to Claude Code: </p><p><code>claude mcp add-from-claude-desktop</code></p><h2 id=\"importing-mcps-one-by-one\">Importing MCPs one-by-one</h2>\n<h3 id=\"browsermcpio-mcp\">browsermcp.io MCP</h3>\n<p><code>claude mcp add browsermcp.io npx @browsermcp/mcp@latest</code></p><h3 id=\"sequential-thinking-mcp\">Sequential Thinking MCP</h3>\n<p><code>claude mcp add sequential-thinking npx @modelcontextprotocol/server-sequential-thinking</code></p><h3 id=\"filesystem-mcp\">Filesystem MCP</h3>\n<p><code>claude mcp add filesystem npx @modelcontextprotocol/server-filesystem &lt;FULL_PATH_TO_FOLDER&gt;</code></p><h3 id=\"mobile-mcp-not-tested-by-me-yet\">Mobile MCP (Not tested by me yet)</h3>\n<p>Install on mac to control android\n<a href=\"https://github.com/mobile-next/mobile-mcp\">https://github.com/mobile-next/mobile-mcp</a></p><p><code>claude mcp add mobile -- npx -y @mobilenext/mobile-mcp@latest</code></p><h3 id=\"to-be-done\">To be done</h3>\n<ul>\n<li><a href=\"https://github.com/BeehiveInnovations/zen-mcp-server\">https://github.com/BeehiveInnovations/zen-mcp-server</a><ul>\n<li><a href=\"https://github.com/BeehiveInnovations/zen-mcp-server/blob/main/docs/custom_models.md\">https://github.com/BeehiveInnovations/zen-mcp-server/blob/main/docs/custom_models.md</a></li>\n</ul>\n</li>\n<li></li>\n</ul>\n",
            "image": "https://amberja.in/media/posts/6/ec726680e57b03bc40e8c5e58a848e7cd39a15df-2881x1621.webp",
            "author": {
                "name": "Written by Amber Jain"
            },
            "tags": [
                   "Half Baked Explorations",
                   "AI / LLMs"
            ],
            "date_published": "2025-07-09T20:39:20+05:30",
            "date_modified": "2025-08-04T00:22:55+05:30"
        },
        {
            "id": "https://amberja.in/my-current-llm-workflow.html",
            "url": "https://amberja.in/my-current-llm-workflow.html",
            "title": "My current LLM workflow",
            "summary": "Current paid plans Lovable Claude Pro (to be used in Claude Desktop&hellip;",
            "content_html": "<h2 id=\"current-paid-plans\">Current paid plans</h2>\n<ul>\n<li>Lovable</li>\n<li>Claude Pro (to be used in Claude Desktop and Claude Code)</li>\n<li>OpenRouter</li>\n</ul>\n<h2 id=\"apps-i-use\">Apps I use</h2>\n<ul>\n<li>PWA: Google AI Studio (to use paid models like <code>Gemini 2.5 Pro</code> for free)</li>\n<li>Mac app: Claude Desktop</li>\n<li>Claude Code</li>\n<li><a href=\"https://github.com/nbonamy/witsy\">Witsy</a> - Allows me to quickly make OpenRouter requests for any model and shows raw request/response in it’s <em>Debug Console</em></li>\n</ul>\n<h2 id=\"mcps-im-using\">MCPs I’m using</h2>\n<p>MCPs:</p><ul>\n<li>BrowserMCP.io</li>\n</ul>\n<p>MCP-esque integrations:</p><ul>\n<li>Google Drive native integration in Claude Desktop</li>\n</ul>\n",
            "image": "https://amberja.in/media/posts/2/Featured-6-23-1000x641.png",
            "author": {
                "name": "Written by Amber Jain"
            },
            "tags": [
                   "Half Baked Explorations",
                   "AI / LLMs"
            ],
            "date_published": "2025-07-09T18:22:23+05:30",
            "date_modified": "2025-07-23T16:51:58+05:30"
        }
    ]
}
